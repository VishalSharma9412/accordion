{"version":3,"sources":["component/accordian/api.js","component/accordian/MyAccordian.js","component/accordian/Accordian.js","App.js","index.js"],"names":["questions","id","question","answer","MyAccordian","useState","show","setShow","className","onClick","Accordian","data","map","curElem","App","ReactDOM","render","document","getElementById"],"mappings":"yMAAaA,EAAY,CACrB,CACIC,GAAI,EACJC,SAAU,2BACVC,OAAO,oLAEX,CACIF,GAAI,EACJC,SAAU,iCACVC,OAAO,8EAEX,CACIF,GAAI,EACJC,SAAU,6BACVC,OAAO,wGAEX,CACIF,GAAI,EACJC,SAAU,uCACVC,OAAO,+JAEX,CACIF,GAAI,EACJC,SAAU,oCACVC,OAAO,oRAEX,CACIF,GAAI,EACJC,SAAU,aACVC,OAAO,wE,OCRAC,EAnBK,SAAC,GAA0B,IAAxBF,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC7B,EAAwBE,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACG,sBAAKC,UAAU,eAAf,UAIK,oBAAGC,QAAS,kBAAMF,GAASD,IAA3B,cAAqCA,EAAM,SAAM,SAAjD,OACA,6BAAKJ,OAGPI,GAAS,oBAAGE,UAAU,UAAb,cAAyBL,EAAzB,WCQRO,G,MAjBG,WACd,MAAwBL,mBAASL,GAAjC,mBAAOW,EAAP,UACA,OACI,mCACI,0BAASH,UAAU,WAAnB,UACI,4DAEAG,EAAKC,KAAI,SAACC,GACN,OAAO,cAAC,EAAD,eAAkCA,GAAhBA,EAAQZ,cCLtCa,EALH,WACX,OAAS,mCACV,cAAC,EAAD,OCEAC,IAASC,OACP,mCACD,cAAC,EAAD,MAGDC,SAASC,eAAe,W","file":"static/js/main.2e579f7f.chunk.js","sourcesContent":["export const questions = [\r\n    {\r\n        id: 1,\r\n        question: 'What is the virtual DOM?',\r\n        answer:'DOM stands for Document Object Model. The DOM represents an HTML document with a logical tree structure. Each branch of the tree ends in a node, and each node contains objects.'\r\n    },\r\n    {\r\n        id: 2,\r\n        question: 'How do you create a React app?',\r\n        answer:'Install the create-react-app package using the command prompt or terminal.'\r\n    },\r\n    {\r\n        id: 3,\r\n        question: 'What is an event in React?',\r\n        answer:'An event is an action that a user or system may trigger, such as pressing a key, a mouse click, etc.'\r\n    },\r\n    {\r\n        id: 4,\r\n        question: ' What are synthetic events in React?',\r\n        answer:\"Synthetic events combine the response of different browser's native events into one API, ensuring that the events are consistent across different browsers.\"\r\n    },\r\n    {\r\n        id: 5,\r\n        question: 'What are the components in React?',\r\n        answer:'Components are the building blocks of any React application, and a single app usually consists of multiple components. A component is essentially a piece of the user interface. It splits the user interface into independent, reusable parts that can be processed separately.'\r\n    },\r\n    {\r\n        id: 6,\r\n        question: 'Made by ??',\r\n        answer:'Vishal Sharma , Tech Skills ---> HTML, CSS, JavaScript, React.JS'\r\n    }\r\n]","import React, {useState} from 'react'\r\n\r\nconst MyAccordian = ({ question, answer }) => {  // destructuring\r\n    const [show, setShow] = useState(false);  // \"show &&\" if true then only show the answer , therefore intailly made it false to hidden the answer till we click the + button\r\n    return (\r\n        <>\r\n           <div className=\"main-heading\">\r\n           {/*    \"setShow(!show)}> ---> whenever someone clicks the + button, we will set the value of \"show\" with the help of \"setShow\" and toggle the data ---> that is if true then make it false and vice-versa // when we see the answee that means the value of our \"show\" becomes true */}\r\n           {/*    \"{ show? \"➖\" : \"➕\"}\" ---> used the ternar operator, if show ki value = true(answer is showing), then change the button to \"-\"    */}\r\n                \r\n                <p onClick={() => setShow(!show)}> { show? \"➖\" : \"➕\"} </p>\r\n                <h3>{question}</h3>\r\n                   \r\n            </div>\r\n            { show &&  <p className=\"answers\"> {answer} </p> } \r\n            {/* \"show &&\" means that agar humari show ki value true hai toh hi hume answer show ho  */}\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyAccordian","import React, {useState} from 'react'\r\nimport { questions } from \"./api\";\r\nimport MyAccordian from './MyAccordian';\r\nimport './accordian.css';\r\n\r\nconst Accordian = () => {\r\n    const [data, setData] = useState(questions);  // for the questions shown in list\r\n    return (\r\n        <>\r\n            <section className=\"main-div\">\r\n                <h1>React Interview Questions </h1>\r\n        {\r\n                data.map((curElem) => {   // for showning the list with the help of array , loop, useState\r\n                    return <MyAccordian key={curElem.id} {...curElem} />   // while using the map func always remember to use the \"key\"  // //here the spread operator is use to pass the the properties of the questions api\r\n                 \r\n                })        \r\n        }\r\n                 </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Accordian","import react from \"react\"\nimport Accordian from \"./component/accordian/Accordian\"\n\nconst App = () => {\n return ( <>\n<Accordian/> \n  </>)\n}\nexport default App;","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App.js\"\n\n\n\nReactDOM.render(\n  <>\n <App /> \n  </>,\n  \ndocument.getElementById(\"root\"));\n\n"],"sourceRoot":""}